{"version":3,"sources":["Theme.js","screens/HomeScreen.js","screens/AppsScreen.js","screens/ResumeScreen.js","Switchboard.js","components/AppBar.js","App.js","index.js"],"names":["theme","dark","responsiveFontSizes","createTheme","palette","mode","primary","main","orange","secondary","grey","typography","fontFamily","join","components","MuiTypography","defaultProps","variantMapping","h3","styleOverrides","fontWeight","h5","styles","flex","appBarTransparent","boxShadow","appsGrid","paddingLeft","paddingRight","paddingTop","paddingBottom","appsChipStack","ColorText","text","Typography","display","color","variant","HomeScreen","useState","snackbarOpen","setSnackbarOpen","handleSnackbarClose","event","reason","closeSnackbar","IconButton","size","onClick","fontSize","Box","alignItems","justifyContent","flexDirection","minHeight","Stack","spacing","direction","Tooltip","title","arrow","component","Link","href","RouterLink","to","Snackbar","open","autoHideDuration","onClose","message","action","ListEntry","entry","divider","sv","name","note","url","tags","ListItem","ListItemButton","ListItemText","sx","map","label","Chip","small","Divider","AppsScreen","lastIndex","data","length","Toolbar","Container","maxWidth","disableGutters","List","index","ResumeScreen","Switchboard","path","exact","AppBar","darkControl","home","setDark","position","disabled","App","location","useLocation","pathname","setHome","useEffect","existingPreference","localStorage","getItem","setItem","StyledEngineProvider","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a44fff8.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from \"@mui/material/styles\";\nimport { orange, grey } from \"@mui/material/colors\";\n\nconst theme = (dark) => {\n  return responsiveFontSizes(\n    createTheme({\n      palette: {\n        mode: dark ? \"dark\" : \"light\",\n        primary: {\n          main: orange[500],\n        },\n        secondary: {\n          main: dark ? grey[200] : grey[700],\n        },\n      },\n      typography: {\n        fontFamily: [\"Roboto\", \"Quicksand\"].join(\",\"),\n      },\n      components: {\n        MuiTypography: {\n          defaultProps: {\n            variantMapping: {\n              h3: \"h1\",\n            },\n          },\n          styleOverrides: {\n            h3: {\n              fontFamily: \"Quicksand\",\n              fontWeight: 300,\n            },\n            h5: {\n              fontFamily: \"Roboto Condensed\",\n              fontWeight: 500,\n            },\n          },\n        },\n      },\n    })\n  );\n};\n\nconst styles = {\n  flex: {\n    flex: 1,\n  },\n  appBarTransparent: {\n    boxShadow: 0,\n  },\n  appsGrid: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    paddingTop: 6,\n    paddingBottom: 6,\n  },\n  appsChipStack: {\n    paddingLeft: 1,\n  },\n};\n\nexport { theme, styles };\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport {\n  Box,\n  Stack,\n  Link,\n  Tooltip,\n  Typography,\n  IconButton,\n  Snackbar,\n} from \"@mui/material\";\n\nimport AppsIcon from \"@mui/icons-material/Apps\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\n\nconst ColorText = ({ text }) => {\n  return (\n    <Typography display=\"inline\" color=\"primary\" variant=\"inherit\">\n      {text}\n    </Typography>\n  );\n};\n\nconst HomeScreen = () => {\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  const handleResumeClick = () => {\n    setSnackbarOpen(true);\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  const closeSnackbar = (\n    <IconButton\n      size=\"small\"\n      aria-label=\"close\"\n      color=\"inherit\"\n      onClick={handleSnackbarClose}\n    >\n      <CloseIcon fontSize=\"small\" />\n    </IconButton>\n  );\n\n  return (\n    <>\n      <Box\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        display=\"flex\"\n        minHeight=\"100vh\"\n      >\n        <Stack spacing={1}>\n          <Typography variant=\"h3\">hi, I'm Julian.</Typography>\n          <Typography variant=\"h5\">\n            I like to make things with <ColorText text=\"Java\" /> and{\" \"}\n            <ColorText text=\"React\" />.\n          </Typography>\n          <Stack direction=\"row\" justifyContent=\"center\">\n            <Tooltip title=\"GitHub\" arrow>\n              <IconButton component={Link} href=\"https://github.com/ngaionice\">\n                <GitHubIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Things I've made\" arrow>\n              <IconButton color=\"inherit\" component={RouterLink} to=\"/things\">\n                <AppsIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Resume\" arrow>\n              <IconButton color=\"inherit\" onClick={handleResumeClick}>\n                {/*<IconButton color=\"inherit\" component={RouterLink} to=\"/resume\">*/}\n                <DescriptionIcon />\n              </IconButton>\n            </Tooltip>\n          </Stack>\n        </Stack>\n      </Box>\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={3000}\n        onClose={handleSnackbarClose}\n        message=\"Resume not yet available, check back later!\"\n        action={closeSnackbar}\n      />\n    </>\n  );\n};\n\nexport { HomeScreen };\n","import {\n  Chip,\n  Container,\n  Divider,\n  Link,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Stack,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\n\nimport * as data from \"../data/things.json\";\nimport { styles } from \"../Theme\";\n\nconst ListEntry = ({ entry, divider }) => {\n  const sv = styles;\n  const { name, note, url, tags } = entry;\n  return (\n    <>\n      <ListItem>\n        <ListItemButton component={Link} href={url}>\n          <ListItemText primary={name} secondary={note} />\n          <Stack direction=\"row\" spacing={1} sx={sv.appsChipStack}>\n            {tags.map((label) => (\n              <Chip label={label} key={label} small />\n            ))}\n          </Stack>\n        </ListItemButton>\n      </ListItem>\n      {divider ? <Divider /> : null}\n    </>\n  );\n};\n\nconst AppsScreen = () => {\n  const sv = styles;\n  const lastIndex = data.default.length - 1;\n\n  return (\n    <>\n      <Toolbar />\n      <Container maxWidth=\"lg\" disableGutters>\n        <Stack spacing={3} sx={sv.appsGrid}>\n          <Typography variant=\"body1\">\n            This is a brief list of things that I've made; hopefully it will get\n            longer over time.\n          </Typography>\n          <Divider />\n          <List>\n            {data.default.map((entry, index) => {\n              return (\n                <ListEntry\n                  key={entry.url}\n                  entry={entry}\n                  divider={index !== lastIndex}\n                />\n              );\n            })}\n          </List>\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport { AppsScreen };\n","import React from \"react\";\n\nconst ResumeScreen = () => {\n  return <div>Resume</div>;\n};\n\nexport { ResumeScreen };\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { HomeScreen } from \"./screens/HomeScreen\";\nimport { AppsScreen } from \"./screens/AppsScreen\";\nimport { ResumeScreen } from \"./screens/ResumeScreen\";\n\nconst Switchboard = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <HomeScreen />\n      </Route>\n      <Route path=\"/things\">\n        <AppsScreen />\n      </Route>\n      <Route path=\"/resume\">\n        <ResumeScreen />\n      </Route>\n    </Switch>\n  );\n};\n\nexport { Switchboard };\n","import {\n  AppBar as MuiAppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  Tooltip,\n} from \"@mui/material\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { styles } from \"../Theme\";\n\nconst AppBar = ({ title, darkControl, home }) => {\n  const sv = styles;\n  const [dark, setDark] = darkControl;\n\n  return (\n    <>\n      <MuiAppBar color=\"transparent\" position=\"fixed\" sx={sv.appBarTransparent}>\n        <Toolbar>\n          <Typography variant=\"body1\" sx={sv.flex}>\n            {title}\n          </Typography>\n\n          {home ? null : (\n            <>\n              <Tooltip title=\"Home\" aria-label=\"home\" arrow>\n                <IconButton color=\"inherit\" component={RouterLink} to=\"/\">\n                  <HomeIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Resume\" aria-label=\"resume\">\n                <IconButton\n                  color=\"inherit\"\n                  component={RouterLink}\n                  to=\"/resume\"\n                  arrow\n                  disabled\n                >\n                  <DescriptionIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          )}\n\n          <Tooltip title={\"Toggle theme\"} arrow>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"toggle theme\"\n              onClick={() => setDark(!dark)}\n            >\n              {dark ? <Brightness4Icon /> : <Brightness7Icon />}\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </MuiAppBar>\n    </>\n  );\n};\n\nexport { AppBar };\n","import React, { useEffect, useState } from \"react\";\nimport { ThemeProvider, StyledEngineProvider } from \"@mui/material/styles\";\nimport { CssBaseline } from \"@mui/material\";\n\nimport { theme } from \"./Theme\";\nimport { Switchboard } from \"./Switchboard\";\nimport { useLocation } from \"react-router-dom\";\nimport { AppBar } from \"./components/AppBar\";\n\nconst App = () => {\n  const location = useLocation();\n  const [dark, setDark] = useState(false);\n  const [home, setHome] = useState(location.pathname === \"/\");\n\n  useEffect(() => {\n    const existingPreference = localStorage.getItem(\"darkMode\");\n    if (existingPreference) {\n      existingPreference === \"dark\" ? setDark(true) : setDark(false);\n    } else {\n      setDark(true);\n      localStorage.setItem(\"darkMode\", \"dark\");\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"darkMode\", dark ? \"dark\" : \"light\");\n  }, [dark]);\n\n  useEffect(() => {\n    setHome(location.pathname === \"/\");\n  }, [location]);\n\n  return (\n    <StyledEngineProvider>\n      <ThemeProvider theme={theme(dark)}>\n        <CssBaseline />\n        <AppBar home={home} darkControl={[dark, setDark]} />\n        <Switchboard />\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}